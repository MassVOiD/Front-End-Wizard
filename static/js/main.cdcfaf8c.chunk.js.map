{"version":3,"sources":["images/logo.png","images/kieranlogo.png","images/twitter.svg","images/github.svg","images/linkedin.svg","components/Header/index.js","components/Footer/index.js","components/TopicGroup/TopicLink/index.js","components/TopicGroup/index.js","components/Search/index.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Footer","kieranlogo","rel","href","target","twitter","github","linkedin","TopicLink","_ref","articleType","_ref$data","data","url","title","description","type","index_es","icon","faBook","faGlobe","faCode","faCogs","console","log","concat","TopicGroup","name","links","map","link","TopicGroup_TopicLink","key","Search","filterTerm","updateFilter","htmlFor","placeholder","id","value","onChange","event","App","state","loading","error","filterList","_this$state","_this","filteredArray","length","forEach","element","object","keywords","filter","el","toLowerCase","includes","push","setState","_this2","this","fetch","then","res","ok","Error","json","catch","err","_this$state2","components_Header","components_Search","group","components_TopicGroup","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdcfaf8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.975c78c5.png\";","module.exports = __webpack_public_path__ + \"static/media/kieranlogo.343abe0f.png\";","module.exports = __webpack_public_path__ + \"static/media/twitter.0a372e00.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.c4542b9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.daf50317.svg\";","import React from 'react';\r\n\r\nimport logo from '../../images/logo.png';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <div className=\"container mt-4\">\r\n      <img className=\"header__img mb-3\" src={logo} alt=\"Front end wizard logo\" />\r\n        <h1 className=\"text-center display-4\">Front End Wizard</h1>\r\n        <p className=\"text-center\">\r\n          <small className=\"badge badge-primary\">v2.0.0</small>\r\n        </p>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport kieranlogo from '../../images/kieranlogo.png';\r\nimport twitter from '../../images/twitter.svg';\r\nimport github from '../../images/github.svg';\r\nimport linkedin from '../../images/linkedin.svg';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer mt-5\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-sm-8\">\r\n          <div className=\"footer-created\">\r\n            <div className=\"footer-created__img-holder\">\r\n              <img className=\"footer-created__img\" src={kieranlogo} alt=\"kieran venison logo\" />\r\n            </div>\r\n            <div className=\"footer-created__text\">\r\n              <p className=\"h6 text-light\">Front end wizard</p>\r\n              <p className=\"text-light\">Created with love by Kieran Venison</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-8 col-sm-4 col-md-3 offset-md-1 col-lg-2 offset-lg-2\">\r\n          <div className=\"social\">\r\n            <div className=\"social__icon-holder\">\r\n              <a rel=\"noopener noreferrer\" href=\"https://twitter.com/kieranmv95?lang=en-gb\" target=\"_blank\">\r\n                <img src={twitter} alt=\"twitter logo\" className=\"social__icon\" />\r\n              </a>\r\n            </div>\r\n            <div className=\"social__icon-holder\">\r\n              <a rel=\"noopener noreferrer\" href=\"https://github.com/kieranmv95\" target=\"_blank\">\r\n                <img src={github} alt=\"github logo\" className=\"social__icon\" />\r\n              </a>\r\n            </div>\r\n            <div className=\"social__icon-holder\">\r\n              <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/kieran-venison-9a4aa292/\" target=\"_blank\">\r\n                <img src={linkedin} alt=\"linkedin logo\" className=\"social__icon social__icon--large\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faBook,\r\n  faGlobe,\r\n  faCode,\r\n  faCogs\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst TopicLink = ({data: { url, title, description, type} }) => {\r\n\r\n  let articleType;\r\n\r\n  switch(type) {\r\n    case \"article\":\r\n      articleType = <FontAwesomeIcon icon={faBook} className={'article-block__icon'} />;\r\n      break;\r\n    case \"website\":\r\n      articleType = <FontAwesomeIcon icon={faGlobe} className={'article-block__icon'} />;\r\n      break;\r\n    case \"code\":\r\n      articleType = <FontAwesomeIcon icon={faCode} className={'article-block__icon'} />;\r\n      break;\r\n    case \"webapp\":\r\n      articleType = <FontAwesomeIcon icon={faCogs} className={'article-block__icon'} />;\r\n      break;\r\n    default:\r\n      console.log(`${articleType} not found`);\r\n  }\r\n\r\n  return (\r\n    <li className=\"col-12 col-md-6 col-md-4 mb-2\">\r\n      <a rel=\"noopener noreferrer\" target=\"_blank\" href={url} className=\"article-block\">\r\n        { articleType }\r\n        <div className=\"article-block__text\">\r\n          <p className=\"article-block__text-title\">{title}</p>\r\n          <p className=\"article-block__text-description\">{description}</p>\r\n        </div>\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TopicLink;\r\n","import React from 'react';\r\nimport TopicLink from \"./TopicLink\";\r\n\r\nconst TopicGroup = ({ data }) => (\r\n  <div>\r\n    <h2 className=\"h4\">{ data.name }</h2>\r\n    <hr/>\r\n    <ul className=\"list-unstyled row\">\r\n      { data.links.map(link => (\r\n        <TopicLink key={link.url} data={link}/>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default TopicGroup;\r\n","import React from 'react';\r\n\r\nconst Search = ({ filterTerm, updateFilter }) => (\r\n  <section className=\"search mt-5\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"search\" className=\"text-light\">Search</label>\r\n            <input\r\n              placeholder=\"Search in name or description\"\r\n              id=\"search\"\r\n              name=\"search\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={filterTerm}\r\n              onChange={event => updateFilter(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../../node_modules/bootstrap/scss/bootstrap.scss';\r\nimport '../scss/master.scss';\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport TopicGroup from \"./TopicGroup\";\r\nimport Search from \"./Search\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    data: null,\r\n    filterTerm: '',\r\n    loading: true,\r\n    error: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://raw.githubusercontent.com/kieranmv95/Front-End-Wizard/master/src/public/data.json')\r\n      .then(res => {\r\n        if(!res.ok) { throw Error }\r\n        return res.json()\r\n      })\r\n      .then(data => this.setState({\r\n        data: data.data,\r\n        loading: false\r\n      }))\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false,\r\n          error: true\r\n        })\r\n      });\r\n  }\r\n\r\n  filterList = () => {\r\n    const { filterTerm, data } = this.state;\r\n    let filteredArray = [];\r\n\r\n    if(filterTerm.length > 0) {\r\n      data.forEach(element => {\r\n        let object = {};\r\n\r\n        object.name = element.name;\r\n        object.keywords = element.keywords;\r\n        object.links = element.links.filter(el => {\r\n          return  el.title.toLowerCase().includes(filterTerm.toLowerCase()) ||\r\n                  el.description.toLowerCase().includes(filterTerm.toLowerCase());\r\n        });\r\n\r\n        if (object.links.length > 0) {\r\n          filteredArray.push(object)\r\n        }\r\n      });\r\n\r\n      console.log(filteredArray);\r\n    } else {\r\n      filteredArray = data;\r\n    }\r\n    return filteredArray;\r\n  };\r\n\r\n  updateFilter = filterTerm => this.setState({ filterTerm });\r\n\r\n  render() {\r\n    const { filterTerm, loading, error } = this.state;\r\n    const filteredArray = this.filterList();\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n\r\n        {loading &&\r\n          <div>Loading...</div>\r\n        }\r\n\r\n        {error &&\r\n          <div>Error fetching data...</div>\r\n        }\r\n\r\n        {!loading && !error &&\r\n          <Search updateFilter={this.updateFilter} filterTerm={filterTerm} />\r\n        }\r\n        <div className=\"container mt-5\">\r\n          {!loading && !error && filteredArray.map(group => (\r\n            <TopicGroup key={group.name} data={group} />\r\n          ))}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}